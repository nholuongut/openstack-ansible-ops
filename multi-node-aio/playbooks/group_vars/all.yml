---
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

default_interface: "{{ default_network | default('eth0') }}"
default_vm_image: "{{ default_image | default('ubuntu-20.04-amd64') }}"
default_vm_storage: "{{ vm_disk_size | default(92160) }}"
default_vm_root_disk_size: 12288
default_acng_bind_address: 0.0.0.0
default_os_families:
  ubuntu-20.04-amd64: debian
  ubuntu-18.04-amd64: debian

default_ubuntu_kernel: linux-generic
default_ubuntu_mirror_proxy: 'http://10.0.2.1:3142/'
default_ubuntu_mirror_hostname: archive.ubuntu.com
default_ubuntu_mirror_directory: /ubuntu

default_proxy_url: 'http://10.0.2.1:3142/'

default_container_tech: "{{ container_tech | default('lxc') }}"

ipxe_kernel_base_url: "http://boot.ipxe.org"

# The timeout for the SSH check to the vm_servers
vm_ssh_timeout: 1500

# Whether to use snapshots (if they are available) for file-backed VM's
vm_use_snapshot: yes

# IP address, or domain name of the TFTP server
tftp_server: "{{ hostvars[groups['pxe_hosts'][0]]['ansible_host'] | default(ansible_host) }}"
# tftp_ssh_key: ''  # user defined ssh key, used to access the host
tftp_port: 69

# Default ISO images
images:
  ubuntu-20.04-amd64:
    image_type: "debian"
    network_setup: "systemd-networkd"
    image_os: "ubuntu"
    image-version: "focal"
    image_kernel_options: "biosdevname=0 net.ifnames=0 auto=true priority=critical"
    image_netboot_kernel_url: "http://archive.ubuntu.com/ubuntu/dists/focal-updates/main/installer-amd64/current/legacy-images/netboot/ubuntu-installer/amd64/linux"
    image_netboot_initrd_url: "http://archive.ubuntu.com/ubuntu/dists/focal-updates/main/installer-amd64/current/legacy-images/netboot/ubuntu-installer/amd64/initrd.gz"
    image_configs:
      vm:
        url: "http://{{ tftp_server }}/configs/vm.config"
        template_name: "vm.config"
      vm-compute:
        url: "http://{{ tftp_server }}/configs/vm-compute.config"
        template_name: "vm-compute.config"
  ubuntu-18.04-amd64:
    image_type: "debian"
    network_setup: "systemd-networkd"
    image_os: "ubuntu"
    image-version: "bionic"
    image_kernel_options: "biosdevname=0 net.ifnames=0 auto=true priority=critical"
    image_netboot_kernel_url: "http://archive.ubuntu.com/ubuntu/dists/bionic-updates/main/installer-amd64/current/images/netboot/ubuntu-installer/amd64/linux"
    image_netboot_initrd_url: "http://archive.ubuntu.com/ubuntu/dists/bionic-updates/main/installer-amd64/current/images/netboot/ubuntu-installer/amd64/initrd.gz"
    image_configs:
      vm:
        url: "http://{{ tftp_server }}/configs/vm.config"
        template_name: "vm.config"
      vm-compute:
        url: "http://{{ tftp_server }}/configs/vm-compute.config"
        template_name: "vm-compute.config"

# mnaio_data_disk: 'sdc'  # str - not required, set this to define a given data disk if no data disk
#                                               is defined the largest unpartitioned disk will be used.
# mnaio_data_disk_suffix: 1             # str  - not required, set this correspond to partition scheme

mnaio_host_networks:
  dhcp:
    iface: 'vm-br-dhcp'                 # str  - required, interface name
    inet_type: 'static'                 # str  - required, iface type [static, dhcp, manual]
    address: '10.0.2.1/22'              # str  - not required, must be in CIDR format
    iface_port: none                    # str  - required, physical port used within a host bridge
    address_aliases:                    # list - not required, items must be sting and in CIDR format
      - '10.0.2.2/22'
  mgmt:
    iface: 'vm-br-eth1'
    inet_type: 'static'
    address: '10.0.236.1/22'
    iface_port: none
  flat:
    iface: 'vm-br-eth2'
    inet_type: 'static'
    address: '10.0.248.1/22'
    iface_port: none
  vlan:
    iface: 'vm-br-eth3'
    inet_type: 'manual'
    iface_port: none
  vxlan:
    iface: 'vm-br-eth4'
    inet_type: 'static'
    address: '10.0.240.1/22'
    iface_port: none
  storage:
    iface: 'vm-br-eth5'
    inet_type: 'static'
    address: '10.0.244.1/22'
    iface_port: none
  lbaas:
    iface: 'vm-br-eth6'
    inet_type: 'static'
    address: '10.0.232.1/22'
    iface_port: none

osa_enable_infra: true
osa_enable_identity: true
osa_enable_block_storage: "{{ not (enable_ceph_storage | bool) }}"
osa_enable_image: true
osa_enable_lbaas: false
osa_enable_dnsaas: false
osa_enable_compute: true
osa_enable_orchestration: true
osa_enable_dashboard: true
osa_enable_network: true
osa_enable_networking_ovn: false
osa_enable_networking_ovs_dvr: false
osa_enable_meter: false
osa_enable_object_storage: "{{ not (enable_ceph_storage | bool) }}"
osa_enable_legacy_os_infra: "{{ (osa_enable_image | bool) and (osa_enable_orchestration | bool) and (osa_enable_dashboard | bool) and (osa_enable_compute | bool) }}"
osa_disable_serial: false
osa_enable_elk_metrics: false
osa_enable_os_profiler: false
osa_enable_uwsgi_stats: false

# Ceph
enable_ceph_storage: false
ceph_journal_size: 5120
ceph_osds_filesystem_type: 'xfs'
